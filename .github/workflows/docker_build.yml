name: Build and Publish Docker Image

on:
  workflow_dispatch:
    inputs:
      release:
        description: 'Create GitHub release'
        required: false
        type: boolean
        default: true

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get version and build date
        id: git-version
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          if [[ "$VERSION" == "$GITHUB_REF" ]]; then
            VERSION=$(echo ${{ github.sha }} | cut -c1-7)
          fi
          # Get current date in format YYYYMMDD-HHMMSS
          BUILD_DATE=$(date +'%Y%m%d-%H%M%S')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "BUILD_DATE=$BUILD_DATE" >> $GITHUB_ENV
          echo "build_date=$BUILD_DATE" >> $GITHUB_OUTPUT

      - name: Prepare metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/ecsagent
          tags: |
            type=raw,value=latest
            type=raw,value=${{ steps.git-version.outputs.build_date }}
            type=raw,value=${{ steps.git-version.outputs.version }}
            type=sha

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/s390x
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Create GitHub Release
        if: ${{ inputs.release == true }}
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.git-version.outputs.build_date }}
          name: Release v${{ steps.git-version.outputs.build_date }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            LICENSE
            README.md
